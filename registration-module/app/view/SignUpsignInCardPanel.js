/*
 * File: app/view/SignUpsignInCardPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SignUpsignInCardPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.registrationCardPanel',

    config: {
        registrationUrl: 'http://localhost:8080/appusers',
        base64JsLocation: 'static/js/Base64.js',
        itemId: 'signUpsignInCardPanel',
        layout: {
            type: 'card'
        },
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                title: 'App Name',
                items: [
                    {
                        xtype: 'panel',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, event) {
                                    var signUpsignInCardPanel = this.up('#signUpsignInCardPanel');
                                    var quickSignUpDoneForm = signUpsignInCardPanel.down('#quickSignUpDoneForm');
                                    var userInfoFormBackButton = signUpsignInCardPanel.down('#userInfoFormBackButton');


                                    userInfoFormBackButton.hide();
                                    signUpsignInCardPanel.animateActiveItem(quickSignUpDoneForm, { type : 'slide'});
                                },
                                hidden: true,
                                itemId: 'userInfoFormBackButton',
                                ui: 'back',
                                text: 'Back'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'formpanel',
                itemId: 'whatsYourNameForm',
                items: [
                    {
                        xtype: 'fieldset',
                        title: 'Whats Your Name ?',
                        items: [
                            {
                                xtype: 'textfield',
                                itemId: 'firstNameAsUserId',
                                placeHolder: 'Enter your first name..'
                            }
                        ]
                    },
                    {
                        xtype: 'fieldset',
                        title: 'Any word you can remember..',
                        items: [
                            {
                                xtype: 'textfield',
                                itemId: 'wordYouLike',
                                labelWidth: '0%',
                                placeHolder: 'Temporary password..'
                            }
                        ]
                    },
                    {
                        xtype: 'fieldset',
                        itemId: 'whatsYourNameFormSubmit',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, event) {
                                    var signUpsignInCardPanel = this.up('#signUpsignInCardPanel');

                                    var whatsYourNameForm = signUpsignInCardPanel.down('#whatsYourNameForm');

                                    var firstNameAsUserid = whatsYourNameForm.down('#firstNameAsUserId');
                                    var wordYouLike = whatsYourNameForm.down('#wordYouLike');

                                    firstNameAsUserid = firstNameAsUserid.getValue();
                                    wordYouLike = wordYouLike.getValue();


                                    var userObject = {};// Could have used Ext.define('MyApp.model.User') but
                                    // want to avoid inline defining Ext classes as it really deserve 
                                    // separate file. This is exportable component, so want to avoid 
                                    // separate file too !


                                    userObject.userid = firstNameAsUserid;
                                    userObject.password = wordYouLike;

                                    var nameRgx = /^[A-Za-z ]{3,20}$/;
                                    var passwordRgx =  /^[A-Za-z0-9!@#$%^&*()_]{6,100}$/;
                                    var errors = [];

                                    for(var field in userObject){
                                        if(userObject[field] === ''){
                                            var msg = 'Fields Are Mandatory !';
                                            Ext.Msg.alert('',msg,Ext.emptyFn);
                                            errors[errors.length] = msg;
                                            return;
                                        }
                                    }

                                    if(! nameRgx.test(userObject.userid)){
                                        var msg = 'Name is invalid ! At least 3 in length and no spaces. You could append last name';
                                        Ext.Msg.alert('',msg,Ext.emptyFn); 
                                        errors[errors.length] = msg;
                                        return;
                                    }

                                    if(! passwordRgx.test(userObject.password)){
                                        var msg = 'Password invalid, Min 6 in length, allowed a-z,0-9 and symbols !@#$%^&*()_';
                                        Ext.Msg.alert('',msg,Ext.emptyFn); 
                                        errors[errors.length] = msg;
                                        return;
                                    }


                                    userObject.firstName = firstNameAsUserid;

                                    userObject.status = 'ACTIVE'; // If server has user status

                                    var userObjectJson = Ext.JSON.encode(userObject);


                                    var registrationUrl = signUpsignInCardPanel.getInitialConfig().registrationUrl;

                                    Ext.Ajax.request({
                                        url: registrationUrl,
                                        method: 'post',
                                        jsonData : userObjectJson,
                                        headers : { 
                                            Accept : 'application/json' 
                                        },
                                        success: function (response) { 
                                            var createdUserObject = Ext.JSON.decode(response.responseText);       
                                            createdUserObject.plainPassword = wordYouLike;

                                            var tok = createdUserObject.userid + ':' + createdUserObject.plainPassword;
                                            var hash = Base64.encode(tok);
                                            var authHeaderValue = "Basic " + hash;
                                            createdUserObject.authHeaderValue = authHeaderValue ;

                                            if (createdUserObject.createdOn !== null) { // Here anything can be used which confirms server has behaved good

                                                var quickSignUpDoneForm = signUpsignInCardPanel.down('#quickSignUpDoneForm');
                                                var generatedUserId = quickSignUpDoneForm.down('#generatedUserId');
                                                generatedUserId.setValue(createdUserObject.userid);
                                                var wordAsPassword = quickSignUpDoneForm.down('#wordAsPassword');
                                                wordAsPassword.setValue(createdUserObject.plainPassword);

                                                quickSignUpDoneForm.createdUserObject = createdUserObject;
                                                quickSignUpDoneForm = signUpsignInCardPanel.down('#quickSignUpDoneForm');
                                                signUpsignInCardPanel.animateActiveItem(quickSignUpDoneForm, { type : 'slide'});
                                            } else {
                                                alert('Either return userObject had no same userid or two objects returned');
                                            }
                                        },
                                        failure: function (response) {
                                            //me.showSignInFailedMessage('Server error. Please try again later.');
                                            var msg = 'Server error, try later';
                                            Ext.Msg.alert('',msg,Ext.emptyFn);
                                        }
                                    });



                                },
                                itemId: 'whatsYourNameFormButton',
                                ui: 'action',
                                text: 'Sign Up !'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'formpanel',
                itemId: 'quickSignUpDoneForm',
                items: [
                    {
                        xtype: 'label',
                        html: '<h1>Quick Sign Up Done !</h1> <br/> <p style="font-size:small">You can now use following auto-generated credentials on any device. This screen is shown only once ! </p>',
                        ui: 'light'
                    },
                    {
                        xtype: 'fieldset',
                        itemId: 'generatedUserIdFieldSet',
                        title: '',
                        items: [
                            {
                                xtype: 'textfield',
                                disabled: false,
                                itemId: 'generatedUserId',
                                label: 'Userid',
                                labelWidth: '40%',
                                readOnly: true
                            },
                            {
                                xtype: 'textfield',
                                disabled: false,
                                itemId: 'wordAsPassword',
                                label: 'Password',
                                labelWidth: '40%',
                                readOnly: true
                            }
                        ]
                    },
                    {
                        xtype: 'fieldset',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, event) {
                                    var signUpsignInCardPanel = this.up('#signUpsignInCardPanel');
                                    var quickSignUpDoneForm = signUpsignInCardPanel.down('#quickSignUpDoneForm');
                                    var userObject = quickSignUpDoneForm.createdUserObject;
                                    signUpsignInCardPanel.fireEvent('signInSuccess',userObject);
                                },
                                ui: 'action',
                                text: 'Start Using App !'
                            }
                        ]
                    },
                    {
                        xtype: 'label',
                        html: '<p style="font-size:small"> Click here, If you want to edit credentials and continue to full-fledge secure registration. </p>'
                    },
                    {
                        xtype: 'fieldset',
                        itemId: 'secureSignUpButtonFieldSet',
                        title: '',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, event) {
                                    var signUpsignInCardPanel = this.up('#signUpsignInCardPanel');
                                    var userInfoForm = signUpsignInCardPanel.down('#userInfoForm');
                                    var quickSignUpDoneForm = this.up('#quickSignUpDoneForm');
                                    var userInfoFormBackButton = signUpsignInCardPanel.down('#userInfoFormBackButton');


                                    var userObject = quickSignUpDoneForm.createdUserObject;

                                    var firstName = userInfoForm.down('#firstName');
                                    var lastName = userInfoForm.down('#lastName');
                                    var userEmail = userInfoForm.down('#userEmail');

                                    var userid = userInfoForm.down('#userid');
                                    var password = userInfoForm.down('#password');
                                    var readablePassword = userInfoForm.down('#readablePassword');


                                    userInfoForm.userObject = userObject; // Assigning userObject to 
                                    // registration page because will need things like current authValue
                                    // while updating the user

                                    firstName.setValue(userObject.firstName);
                                    lastName.setValue(userObject.lastName);
                                    userEmail.setValue(userObject.userEmail);

                                    userid.setValue(userObject.userid);
                                    password.setValue(userObject.plainPassword);
                                    readablePassword.setValue(userObject.plainPassword);

                                    userInfoFormBackButton.show();

                                    signUpsignInCardPanel.animateActiveItem(userInfoForm, { type : 'slide' });


                                },
                                ui: 'confirm',
                                text: 'Secure Sign Up !'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'formpanel',
                itemId: 'userInfoForm',
                items: [
                    {
                        xtype: 'fieldset',
                        title: 'Personal Details',
                        items: [
                            {
                                xtype: 'textfield',
                                itemId: 'firstName',
                                label: 'First Name',
                                labelWidth: '37%',
                                name: 'firstName'
                            },
                            {
                                xtype: 'textfield',
                                itemId: 'lastName',
                                label: 'Last Name',
                                labelWidth: '37%'
                            },
                            {
                                xtype: 'emailfield',
                                itemId: 'userEmail',
                                label: 'Email',
                                labelWidth: '37%',
                                placeHolder: 'email@example.com'
                            }
                        ]
                    },
                    {
                        xtype: 'fieldset',
                        title: 'Credentials',
                        items: [
                            {
                                xtype: 'textfield',
                                itemId: 'userid',
                                label: 'User Id',
                                labelWidth: '37%'
                            },
                            {
                                xtype: 'passwordfield',
                                itemId: 'password',
                                label: 'Password',
                                labelWidth: '37%'
                            },
                            {
                                xtype: 'textfield',
                                hidden: true,
                                itemId: 'readablePassword',
                                label: 'Password',
                                labelWidth: '37%'
                            },
                            {
                                xtype: 'checkboxfield',
                                itemId: 'showPasswordCheckBox',
                                label: 'Show Password in Clear Text',
                                labelWidth: '50%'
                            }
                        ]
                    },
                    {
                        xtype: 'fieldset',
                        itemId: 'myfieldset2',
                        items: [
                            {
                                xtype: 'button',
                                handler: function(button, event) {
                                    var signUpsignInCardPanel = this.up('#signUpsignInCardPanel');
                                    var userInfoForm = signUpsignInCardPanel.down('#userInfoForm');

                                    var firstName = userInfoForm.down('#firstName');
                                    var lastName = userInfoForm.down('#lastName');
                                    var userEmail = userInfoForm.down('#userEmail');
                                    //var confirmEmail = signUpsignInCardPanel.down('#confirmEmail');

                                    var userid = userInfoForm.down('#userid');
                                    var password = userInfoForm.down('#password');
                                    var readablePassword = userInfoForm.down('#readablePassword');
                                    var showPasswordCheckBox = userInfoForm.down('#showPasswordCheckBox');

                                    var userObject = userInfoForm.userObject;
                                    var currentAuthHeaderValue = userObject.authHeaderValue;

                                    userObject.firstName = firstName.getValue();
                                    userObject.lastName = lastName.getValue();
                                    userObject.userEmail = userEmail.getValue();
                                    //userObject.confirmEmail = confirmEmail.getValue();

                                    userObject.userid = userid.getValue();

                                    if(showPasswordCheckBox.getSubmitValue() === null) {
                                        userObject.password = password.getValue();
                                    }else {
                                        userObject.password = readablePassword.getValue();
                                    }


                                    //////////////////////Validations////////////////////////////////
                                    var nameRgx = /^[A-Za-z ]{3,20}$/;
                                    var emailRgx = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                                    var useridRgx = /^[A-Za-z0-9_]{6,16}$/;
                                    var passwordRgx =  /^[A-Za-z0-9!@#$%^&*()_]{6,100}$/;
                                    var errors = [];

                                    for(var field in userObject){
                                        console.log(field + ': ' + userObject[field]);
                                        if(userObject[field] === ''){
                                            Ext.Msg.alert('','All fields are mandatory !',Ext.emptyFn);
                                            errors[errors.length] = 'All fields are mandatory !';
                                            return;
                                        }
                                    }

                                    if(! nameRgx.test(userObject.firstName)){
                                        Ext.Msg.alert('','First Name format invalid',Ext.emptyFn); 
                                        errors[errors.length] = 'First Name format invalid !';
                                        return;
                                    }


                                    if(! nameRgx.test(userObject.lastName)){
                                        Ext.Msg.alert('','Last Name format invalid',Ext.emptyFn);
                                        errors[errors.length] = 'Last Name format invalid !';
                                        return;
                                    }


                                    if(! emailRgx.test(userObject.userEmail)){
                                        Ext.Msg.alert('','Email format invalid',Ext.emptyFn); 
                                        errors[errors.length] = 'Email format invalid';
                                        return;
                                    }
                                    /*
                                    if(userObject.userEmail !== userObject.confirmEmail) {
                                    Ext.Msg.alert('','Emails do not match !',Ext.emptyFn);
                                    errors[errors.length] =  'Emails do not match !';
                                    return;
                                    }
                                    */

                                    if(! useridRgx.test(userObject.userid)){
                                        Ext.Msg.alert('','Userid Invalid, must be 6 in length, no special symbols',Ext.emptyFn); 
                                        errors[errors.length] =  'Userid Invalid, must be 6 in length, no special symbols';
                                        return;
                                    }

                                    if(! passwordRgx.test(userObject.password)){
                                        Ext.Msg.alert('','Password invalid, Min 6 in length, allowed a-z,0-9 and symbols !@#$%^&*()_',Ext.emptyFn); 
                                        errors[errors.length] = 'Password invalid, Min 6 in length, allowed a-z,0-9 and symbols !@#$%^&*()_';
                                        return;
                                    }

                                    /*
                                    // Remember in order to report all errors at once, you have to remove all return statements.
                                    var msg = "Please Enter Valide Data...\n";
                                    for (var i = 0; i<errors.length; i++) {
                                        var numError = i + 1;
                                        msg += "\n" + numError + ". " + errors[i];
                                    }
                                    alert(msg);
                                    */
                                    /////////////////////////////////////////////////////////////////
                                    var userObjectJson = Ext.JSON.encode(userObject);


                                    var registrationUrl = signUpsignInCardPanel.getInitialConfig().registrationUrl;

                                    Ext.Ajax.request({
                                        url: registrationUrl,
                                        method: 'put',
                                        jsonData : userObjectJson,
                                        headers : { 
                                            Accept : 'application/json' ,
                                            Authorization : currentAuthHeaderValue // User needs to use current
                                            // authHeader value based on current password
                                        },
                                        success: function (response) { 

                                            var updatedUserObject = Ext.JSON.decode(response.responseText);

                                            if (updatedUserObject.updatedON > userObject.updatedON) {
                                                updatedUserObject.plainPassword = userObject.password;
                                                var tok = updatedUserObject.userid + ':' + updatedUserObject.plainPassword ;
                                                var hash = Base64.encode(tok);
                                                var authHeaderValue = "Basic " + hash;

                                                updatedUserObject.authHeaderValue = authHeaderValue ; 

                                                signUpsignInCardPanel.fireEvent('signUpSuccess',updatedUserObject);
                                            } else {
                                                var msg = 'Server error, please try later';
                                                Ext.Msg.alert('',msg,Ext.emptyFn);  
                                            }
                                        },
                                        failure: function (response) {
                                            if(response.status === 409) {
                                                var msg = 'User id taken';
                                                Ext.Msg.alert('',msg,Ext.emptyFn); 
                                            }else{
                                                var msg = 'Server error, please try later';
                                                Ext.Msg.alert('',msg,Ext.emptyFn);    
                                            }
                                        }
                                    });

                                },
                                itemId: 'updateProfile',
                                ui: 'action',
                                text: 'Save And Go To App'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'panel',
                html: 'This card is first panel of your app after user sign in done. Here is where your real app logic starts.',
                itemId: 'dummyUserAppPanel'
            }
        ],
        listeners: [
            {
                fn: 'onShowPasswordCheckBoxCheck',
                event: 'check',
                delegate: '#showPasswordCheckBox'
            },
            {
                fn: 'onShowPasswordCheckBoxUncheck',
                event: 'uncheck',
                delegate: '#showPasswordCheckBox'
            }
        ]
    },

    onShowPasswordCheckBoxCheck: function(checkboxfield, e, eOpts) {
        var userInfoForm = checkboxfield.up('#userInfoForm');

        var password = userInfoForm.down('#password');
        var readablePassword = userInfoForm.down('#readablePassword');
        readablePassword.setValue(password.getValue());
        password.hide();
        readablePassword.show();
    },

    onShowPasswordCheckBoxUncheck: function(checkboxfield, e, eOpts) {
        var userInfoForm = checkboxfield.up('#userInfoForm');

        var password = userInfoForm.down('#password');
        var readablePassword = userInfoForm.down('#readablePassword');
        password.setValue(readablePassword.getValue());
        password.show();
        readablePassword.hide();
    }

});